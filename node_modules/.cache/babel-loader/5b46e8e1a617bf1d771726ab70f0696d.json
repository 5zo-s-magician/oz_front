{"ast":null,"code":"/*\n * css-buttons\n * https://github.com/upstage/css-buttons\n * Copyright (c) 2013\n * Licensed under the MIT license.\n */\n'use strict';\n\nmodule.exports = function (grunt) {\n  grunt.util._.mixin(require('./src/helpers/mixins.js').init(grunt)); // Project configuration.\n\n\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    assemble: {\n      docs: {\n        options: {\n          flatten: true,\n          assets: 'assets',\n          helpers: ['./src/helpers/helpers.js'],\n          layout: 'src/templates/layouts/default.hbs',\n          partials: ['src/templates/partials/**/*.hbs'],\n          data: ['src/data/*.{json,yml}'],\n          // Pass metadata from package.json into templates\n          pkg: '<%= pkg %>'\n        },\n        src: ['src/templates/pages/*.hbs'],\n        dest: './'\n      }\n    },\n    less: {\n      options: {\n        paths: ['src/less', 'src/less/components'],\n        imports: {\n          reference: ['src/less/variables.less', 'src/less/mixins.less']\n        }\n      },\n      component: {\n        src: 'src/less/components/*.less',\n        dest: 'assets/components.css'\n      }\n    },\n    prettify: {\n      options: {\n        prettifyrc: '.prettifyrc'\n      },\n      docs: {\n        files: [{\n          expand: true,\n          cwd: './',\n          ext: '.html',\n          src: ['*.html'],\n          dest: './'\n        }]\n      }\n    },\n    // Before generating any new files,\n    // remove any previously-created files.\n    clean: {\n      example: ['*.html']\n    }\n  }); // Load npm plugins to provide necessary tasks.\n\n  grunt.loadNpmTasks('assemble');\n  grunt.loadNpmTasks('assemble-less');\n  grunt.loadNpmTasks('grunt-prettify');\n  grunt.loadNpmTasks('grunt-contrib-clean'); // Default tasks to be run.\n\n  grunt.registerTask('default', ['clean', 'less', 'assemble', 'prettify']);\n};","map":{"version":3,"sources":["/Users/ihyeonju/project/vcmusic_front/node_modules/components/Gruntfile.js"],"names":["module","exports","grunt","util","_","mixin","require","init","initConfig","pkg","file","readJSON","assemble","docs","options","flatten","assets","helpers","layout","partials","data","src","dest","less","paths","imports","reference","component","prettify","prettifyrc","files","expand","cwd","ext","clean","example","loadNpmTasks","registerTask"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/BA,EAAAA,KAAK,CAACC,IAAN,CAAWC,CAAX,CAAaC,KAAb,CAAmBC,OAAO,CAAC,yBAAD,CAAP,CAAmCC,IAAnC,CAAwCL,KAAxC,CAAnB,EAD+B,CAG/B;;;AACAA,EAAAA,KAAK,CAACM,UAAN,CAAiB;AACfC,IAAAA,GAAG,EAAEP,KAAK,CAACQ,IAAN,CAAWC,QAAX,CAAoB,cAApB,CADU;AAGfC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,IADF;AAEPC,UAAAA,MAAM,EAAE,QAFD;AAGPC,UAAAA,OAAO,EAAE,CAAC,0BAAD,CAHF;AAIPC,UAAAA,MAAM,EAAE,mCAJD;AAKPC,UAAAA,QAAQ,EAAE,CAAC,iCAAD,CALH;AAMPC,UAAAA,IAAI,EAAE,CAAC,uBAAD,CANC;AAQP;AACAX,UAAAA,GAAG,EAAE;AATE,SADL;AAYJY,QAAAA,GAAG,EAAE,CAAC,2BAAD,CAZD;AAaJC,QAAAA,IAAI,EAAE;AAbF;AADE,KAHK;AAqBfC,IAAAA,IAAI,EAAE;AACJT,MAAAA,OAAO,EAAE;AACPU,QAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,qBAAb,CADA;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,SAAS,EAAE,CAAC,yBAAD,EAA4B,sBAA5B;AADJ;AAFF,OADL;AAOJC,MAAAA,SAAS,EAAE;AACTN,QAAAA,GAAG,EAAG,4BADG;AAETC,QAAAA,IAAI,EAAE;AAFG;AAPP,KArBS;AAkCfM,IAAAA,QAAQ,EAAE;AACRd,MAAAA,OAAO,EAAE;AACPe,QAAAA,UAAU,EAAE;AADL,OADD;AAIRhB,MAAAA,IAAI,EAAE;AACJiB,QAAAA,KAAK,EAAE,CACL;AAACC,UAAAA,MAAM,EAAE,IAAT;AAAeC,UAAAA,GAAG,EAAE,IAApB;AAA0BC,UAAAA,GAAG,EAAE,OAA/B;AAAwCZ,UAAAA,GAAG,EAAE,CAAC,QAAD,CAA7C;AAAyDC,UAAAA,IAAI,EAAE;AAA/D,SADK;AADH;AAJE,KAlCK;AA6Cf;AACA;AACAY,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,CAAC,QAAD;AADJ;AA/CQ,GAAjB,EAJ+B,CAwD/B;;AACAjC,EAAAA,KAAK,CAACkC,YAAN,CAAmB,UAAnB;AACAlC,EAAAA,KAAK,CAACkC,YAAN,CAAmB,eAAnB;AACAlC,EAAAA,KAAK,CAACkC,YAAN,CAAmB,gBAAnB;AACAlC,EAAAA,KAAK,CAACkC,YAAN,CAAmB,qBAAnB,EA5D+B,CA8D/B;;AACAlC,EAAAA,KAAK,CAACmC,YAAN,CAAmB,SAAnB,EAA8B,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,EAA8B,UAA9B,CAA9B;AACD,CAhED","sourcesContent":["/*\n * css-buttons\n * https://github.com/upstage/css-buttons\n * Copyright (c) 2013\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function(grunt) {\n  grunt.util._.mixin(require('./src/helpers/mixins.js').init(grunt));\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n\n    assemble: {\n      docs: {\n        options: {\n          flatten: true,\n          assets: 'assets',\n          helpers: ['./src/helpers/helpers.js'],\n          layout: 'src/templates/layouts/default.hbs',\n          partials: ['src/templates/partials/**/*.hbs'],\n          data: ['src/data/*.{json,yml}'],\n\n          // Pass metadata from package.json into templates\n          pkg: '<%= pkg %>'\n        },\n        src: ['src/templates/pages/*.hbs'],\n        dest: './'\n      }\n    },\n\n    less: {\n      options: {\n        paths: ['src/less', 'src/less/components'],\n        imports: {\n          reference: ['src/less/variables.less', 'src/less/mixins.less']\n        }\n      },\n      component: {\n        src:  'src/less/components/*.less',\n        dest: 'assets/components.css'\n      }\n    },\n\n    prettify: {\n      options: {\n        prettifyrc: '.prettifyrc'\n      },\n      docs: {\n        files: [\n          {expand: true, cwd: './', ext: '.html', src: ['*.html'], dest: './'}\n        ]\n      }\n    },\n\n    // Before generating any new files,\n    // remove any previously-created files.\n    clean: {\n      example: ['*.html']\n    }\n  });\n\n  // Load npm plugins to provide necessary tasks.\n  grunt.loadNpmTasks('assemble');\n  grunt.loadNpmTasks('assemble-less');\n  grunt.loadNpmTasks('grunt-prettify');\n  grunt.loadNpmTasks('grunt-contrib-clean');\n\n  // Default tasks to be run.\n  grunt.registerTask('default', ['clean', 'less', 'assemble', 'prettify']);\n};\n\n"]},"metadata":{},"sourceType":"script"}