{"ast":null,"code":"var _jsxFileName = \"/Users/ihyeonju/project/vcmusic_front/src/components/generator/dragdrop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport \"./DragDrop.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragDrop = () => {\n  _s();\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [files, setFiles] = useState([]);\n  const dragRef = useRef(null);\n  const fileId = useRef(0);\n  useEffect(() => {\n    console.log(files[0].object.stream);\n  }, [files]);\n  const onChangeFiles = useCallback(e => {\n    let selectFiles = [];\n    let tempFiles = files;\n\n    if (e.type === \"drop\") {\n      selectFiles = e.dataTransfer.files;\n    } else {\n      selectFiles = e.target.files;\n    }\n\n    for (const file of selectFiles) {\n      tempFiles = [...tempFiles, {\n        id: fileId.current++,\n        object: file\n      }];\n    }\n\n    setFiles(tempFiles);\n  }, [files]);\n  const handleFilterFile = useCallback(id => {\n    setFiles(files.filter(file => file.id !== id));\n  }, [files]);\n  const handleDragIn = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleDragOut = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.dataTransfer.files) {\n      setIsDragging(true);\n    }\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    onChangeFiles(e);\n    setIsDragging(false);\n  }, [onChangeFiles]);\n  const initDragEvents = useCallback(() => {\n    if (dragRef.current !== null) {\n      dragRef.current.addEventListener(\"dragenter\", handleDragIn);\n      dragRef.current.addEventListener(\"dragleave\", handleDragOut);\n      dragRef.current.addEventListener(\"dragover\", handleDragOver);\n      dragRef.current.addEventListener(\"drop\", handleDrop);\n    }\n  }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  const resetDragEvents = useCallback(() => {\n    if (dragRef.current !== null) {\n      dragRef.current.removeEventListener(\"dragenter\", handleDragIn);\n      dragRef.current.removeEventListener(\"dragleave\", handleDragOut);\n      dragRef.current.removeEventListener(\"dragover\", handleDragOver);\n      dragRef.current.removeEventListener(\"drop\", handleDrop);\n    }\n  }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  useEffect(() => {\n    initDragEvents();\n    return () => resetDragEvents();\n  }, [initDragEvents, resetDragEvents]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DragDrop\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileUpload\",\n      style: {\n        display: \"none\"\n      },\n      multiple: true,\n      onChange: onChangeFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: isDragging ? \"DragDrop-File-Dragging\" : \"DragDrop-File\",\n      htmlFor: \"fileUpload\",\n      ref: dragRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uD30C\\uC77C \\uCCA8\\uBD80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DragDrop-Files\",\n      children: files.length > 0 && files.map(file => {\n        const {\n          id,\n          object: {\n            name\n          }\n        } = file;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"DragDrop-Files-Filter\",\n            onClick: () => handleFilterFile(id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DragDrop, \"564eckRe1e+Vot9N1SpToHqyL3o=\");\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/Users/ihyeonju/project/vcmusic_front/src/components/generator/dragdrop.tsx"],"names":["React","useCallback","useRef","useState","useEffect","DragDrop","isDragging","setIsDragging","files","setFiles","dragRef","fileId","console","log","object","stream","onChangeFiles","e","selectFiles","tempFiles","type","dataTransfer","target","file","id","current","handleFilterFile","filter","handleDragIn","preventDefault","stopPropagation","handleDragOut","handleDragOver","handleDrop","initDragEvents","addEventListener","resetDragEvents","removeEventListener","display","length","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAEIC,WAFJ,EAGIC,MAHJ,EAIIC,QAJJ,EAKIC,SALJ,QAMS,OANT;AAOE,OAAO,iBAAP;;;AAOA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAe,EAAf,CAAlC;AAEA,QAAMO,OAAO,GAAGR,MAAM,CAA0B,IAA1B,CAAtB;AACA,QAAMS,MAAM,GAAGT,MAAM,CAAS,CAAT,CAArB;AAEAE,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,CAAD,CAAL,CAASM,MAAT,CAAgBC,MAA5B;AACH,GAFQ,EAEP,CAACP,KAAD,CAFO,CAAT;AAIA,QAAMQ,aAAa,GAAGf,WAAW,CAC9BgB,CAAD,IAAkD;AAChD,QAAIC,WAAmB,GAAG,EAA1B;AACA,QAAIC,SAAuB,GAAGX,KAA9B;;AAEA,QAAIS,CAAC,CAACG,IAAF,KAAW,MAAf,EAAuB;AACrBF,MAAAA,WAAW,GAAGD,CAAC,CAACI,YAAF,CAAeb,KAA7B;AACD,KAFD,MAEO;AACLU,MAAAA,WAAW,GAAGD,CAAC,CAACK,MAAF,CAASd,KAAvB;AACD;;AAED,SAAK,MAAMe,IAAX,IAAmBL,WAAnB,EAAgC;AAC9BC,MAAAA,SAAS,GAAG,CACV,GAAGA,SADO,EAEV;AACEK,QAAAA,EAAE,EAAEb,MAAM,CAACc,OAAP,EADN;AAEEX,QAAAA,MAAM,EAAES;AAFV,OAFU,CAAZ;AAOD;;AAEDd,IAAAA,QAAQ,CAACU,SAAD,CAAR;AACD,GAtB8B,EAuB/B,CAACX,KAAD,CAvB+B,CAAjC;AA0BA,QAAMkB,gBAAgB,GAAGzB,WAAW,CACjCuB,EAAD,IAAsB;AACpBf,IAAAA,QAAQ,CAACD,KAAK,CAACmB,MAAN,CAAcJ,IAAD,IAAsBA,IAAI,CAACC,EAAL,KAAYA,EAA/C,CAAD,CAAR;AACD,GAHiC,EAIlC,CAAChB,KAAD,CAJkC,CAApC;AAOA,QAAMoB,YAAY,GAAG3B,WAAW,CAAEgB,CAAD,IAAwB;AACvDA,IAAAA,CAAC,CAACY,cAAF;AACAZ,IAAAA,CAAC,CAACa,eAAF;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,QAAMC,aAAa,GAAG9B,WAAW,CAAEgB,CAAD,IAAwB;AACxDA,IAAAA,CAAC,CAACY,cAAF;AACAZ,IAAAA,CAAC,CAACa,eAAF;AAEAvB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GALgC,EAK9B,EAL8B,CAAjC;AAOA,QAAMyB,cAAc,GAAG/B,WAAW,CAAEgB,CAAD,IAAwB;AACzDA,IAAAA,CAAC,CAACY,cAAF;AACAZ,IAAAA,CAAC,CAACa,eAAF;;AAEA,QAAIb,CAAC,CAACI,YAAF,CAAgBb,KAApB,EAA2B;AACzBD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAPiC,EAO/B,EAP+B,CAAlC;AASA,QAAM0B,UAAU,GAAGhC,WAAW,CAC3BgB,CAAD,IAAwB;AACtBA,IAAAA,CAAC,CAACY,cAAF;AACAZ,IAAAA,CAAC,CAACa,eAAF;AAEAd,IAAAA,aAAa,CAACC,CAAD,CAAb;AACAV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAP2B,EAQ5B,CAACS,aAAD,CAR4B,CAA9B;AAWA,QAAMkB,cAAc,GAAGjC,WAAW,CAAC,MAAY;AAC7C,QAAIS,OAAO,CAACe,OAAR,KAAoB,IAAxB,EAA8B;AAC5Bf,MAAAA,OAAO,CAACe,OAAR,CAAgBU,gBAAhB,CAAiC,WAAjC,EAA8CP,YAA9C;AACAlB,MAAAA,OAAO,CAACe,OAAR,CAAgBU,gBAAhB,CAAiC,WAAjC,EAA8CJ,aAA9C;AACArB,MAAAA,OAAO,CAACe,OAAR,CAAgBU,gBAAhB,CAAiC,UAAjC,EAA6CH,cAA7C;AACAtB,MAAAA,OAAO,CAACe,OAAR,CAAgBU,gBAAhB,CAAiC,MAAjC,EAAyCF,UAAzC;AACD;AACF,GAPiC,EAO/B,CAACL,YAAD,EAAeG,aAAf,EAA8BC,cAA9B,EAA8CC,UAA9C,CAP+B,CAAlC;AASA,QAAMG,eAAe,GAAGnC,WAAW,CAAC,MAAY;AAC9C,QAAIS,OAAO,CAACe,OAAR,KAAoB,IAAxB,EAA8B;AAC5Bf,MAAAA,OAAO,CAACe,OAAR,CAAgBY,mBAAhB,CAAoC,WAApC,EAAiDT,YAAjD;AACAlB,MAAAA,OAAO,CAACe,OAAR,CAAgBY,mBAAhB,CAAoC,WAApC,EAAiDN,aAAjD;AACArB,MAAAA,OAAO,CAACe,OAAR,CAAgBY,mBAAhB,CAAoC,UAApC,EAAgDL,cAAhD;AACAtB,MAAAA,OAAO,CAACe,OAAR,CAAgBY,mBAAhB,CAAoC,MAApC,EAA4CJ,UAA5C;AACD;AACF,GAPkC,EAOhC,CAACL,YAAD,EAAeG,aAAf,EAA8BC,cAA9B,EAA8CC,UAA9C,CAPgC,CAAnC;AASA7B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,cAAc;AAEd,WAAO,MAAME,eAAe,EAA5B;AACD,GAJQ,EAIN,CAACF,cAAD,EAAiBE,eAAjB,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAHT;AAIE,MAAA,QAAQ,EAAE,IAJZ;AAKE,MAAA,QAAQ,EAAEtB;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AACE,MAAA,SAAS,EAAEV,UAAU,GAAG,wBAAH,GAA8B,eADrD;AAEE,MAAA,OAAO,EAAC,YAFV;AAGE,MAAA,GAAG,EAAEI,OAHP;AAAA,6BAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGF,KAAK,CAAC+B,MAAN,GAAe,CAAf,IACC/B,KAAK,CAACgC,GAAN,CAAWjB,IAAD,IAAsB;AAC9B,cAAM;AACJC,UAAAA,EADI;AAEJV,UAAAA,MAAM,EAAE;AAAE2B,YAAAA;AAAF;AAFJ,YAGFlB,IAHJ;AAKA,4BACE;AAAA,kCACE;AAAA,sBAAMkB;AAAN;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,uBADZ;AAEE,YAAA,OAAO,EAAE,MAAMf,gBAAgB,CAACF,EAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAjBD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA7ID;;GAAMnB,Q;;KAAAA,Q;AA+IN,eAAeA,QAAf","sourcesContent":["import React, {\n    ChangeEvent,\n    useCallback,\n    useRef,\n    useState,\n    useEffect\n  } from \"react\";\n  import \"./DragDrop.scss\";\n  \n  interface IFileTypes {\n    id: number;\n    object: File;\n  }\n  \n  const DragDrop = () => {\n    const [isDragging, setIsDragging] = useState<boolean>(false);\n    const [files, setFiles] = useState<IFileTypes[]>([]);\n  \n    const dragRef = useRef<HTMLLabelElement | null>(null);\n    const fileId = useRef<number>(0);\n\n    useEffect(()=>{\n        console.log(files[0].object.stream)\n    },[files])\n  \n    const onChangeFiles = useCallback(\n      (e: ChangeEvent<HTMLInputElement> | any): void => {\n        let selectFiles: File[] = [];\n        let tempFiles: IFileTypes[] = files;\n  \n        if (e.type === \"drop\") {\n          selectFiles = e.dataTransfer.files;\n        } else {\n          selectFiles = e.target.files;\n        }\n  \n        for (const file of selectFiles) {\n          tempFiles = [\n            ...tempFiles,\n            {\n              id: fileId.current++,\n              object: file\n            }\n          ];\n        }\n  \n        setFiles(tempFiles);\n      },\n      [files]\n    );\n  \n    const handleFilterFile = useCallback(\n      (id: number): void => {\n        setFiles(files.filter((file: IFileTypes) => file.id !== id));\n      },\n      [files]\n    );\n  \n    const handleDragIn = useCallback((e: DragEvent): void => {\n      e.preventDefault();\n      e.stopPropagation();\n    }, []);\n  \n    const handleDragOut = useCallback((e: DragEvent): void => {\n      e.preventDefault();\n      e.stopPropagation();\n  \n      setIsDragging(false);\n    }, []);\n  \n    const handleDragOver = useCallback((e: DragEvent): void => {\n      e.preventDefault();\n      e.stopPropagation();\n  \n      if (e.dataTransfer!.files) {\n        setIsDragging(true);\n      }\n    }, []);\n  \n    const handleDrop = useCallback(\n      (e: DragEvent): void => {\n        e.preventDefault();\n        e.stopPropagation();\n  \n        onChangeFiles(e);\n        setIsDragging(false);\n      },\n      [onChangeFiles]\n    );\n  \n    const initDragEvents = useCallback((): void => {\n      if (dragRef.current !== null) {\n        dragRef.current.addEventListener(\"dragenter\", handleDragIn);\n        dragRef.current.addEventListener(\"dragleave\", handleDragOut);\n        dragRef.current.addEventListener(\"dragover\", handleDragOver);\n        dragRef.current.addEventListener(\"drop\", handleDrop);\n      }\n    }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  \n    const resetDragEvents = useCallback((): void => {\n      if (dragRef.current !== null) {\n        dragRef.current.removeEventListener(\"dragenter\", handleDragIn);\n        dragRef.current.removeEventListener(\"dragleave\", handleDragOut);\n        dragRef.current.removeEventListener(\"dragover\", handleDragOver);\n        dragRef.current.removeEventListener(\"drop\", handleDrop);\n      }\n    }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  \n    useEffect(() => {\n      initDragEvents();\n  \n      return () => resetDragEvents();\n    }, [initDragEvents, resetDragEvents]);\n  \n    return (\n      <div className=\"DragDrop\">\n        <input\n          type=\"file\"\n          id=\"fileUpload\"\n          style={{ display: \"none\" }}\n          multiple={true}\n          onChange={onChangeFiles}\n        />\n  \n        <label\n          className={isDragging ? \"DragDrop-File-Dragging\" : \"DragDrop-File\"}\n          htmlFor=\"fileUpload\"\n          ref={dragRef}\n        >\n          <div>파일 첨부</div>\n        </label>\n  \n        <div className=\"DragDrop-Files\">\n          {files.length > 0 &&\n            files.map((file: IFileTypes) => {\n              const {\n                id,\n                object: { name }\n              } = file;\n  \n              return (\n                <div key={id}>\n                  <div>{name}</div>\n                  <div\n                    className=\"DragDrop-Files-Filter\"\n                    onClick={() => handleFilterFile(id)}\n                  >\n                    X\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  };\n  \n  export default DragDrop;"]},"metadata":{},"sourceType":"module"}