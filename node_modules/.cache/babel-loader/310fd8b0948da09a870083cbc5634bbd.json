{"ast":null,"code":"/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\n\nexports.clearTimeout = function _clearTimeout() {\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\n\nexports.parse = function parse(fn) {\n  this._parser = fn;\n  return this;\n};\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\n\nexports.timeout = function timeout(ms) {\n  this._timeout = ms;\n  return this;\n};\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\n\nexports.then = function then(fulfill, reject) {\n  return this.end(function (err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n};\n/**\n * Allow for extension\n */\n\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n};\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\n\nexports.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\n\nexports.getHeader = exports.get;\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function (field, val) {\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\n\n\nexports.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nexports.field = function (name, val) {\n  this._getFormData().append(name, val);\n\n  return this;\n};","map":{"version":3,"sources":["/Users/ihyeonju/project/vcmusic_front/node_modules/superagent/lib/request-base.js"],"names":["isObject","require","exports","clearTimeout","_clearTimeout","_timeout","_timer","parse","fn","_parser","timeout","ms","then","fulfill","reject","end","err","res","use","get","field","_header","toLowerCase","getHeader","set","val","key","header","unset","name","_getFormData","append"],"mappings":"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","sourcesContent":["/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n"]},"metadata":{},"sourceType":"script"}